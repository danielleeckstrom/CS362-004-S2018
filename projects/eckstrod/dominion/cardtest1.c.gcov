        -:    0:Source:cardtest1.c
        -:    0:Graph:cardtest1.gcno
        -:    0:Data:cardtest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:#include <assert.h>
        -:    3:#include <stdlib.h>
        -:    4:#include "dominion.h"
        -:    5:#include "dominion_helpers.h"
        -:    6:#include "rngs.h"
        -:    7:
        -:    8://Custom Assert Function
        2:    9:void assertTrue(int a, int b, char* testName)
        -:   10:{
        2:   11:	if(a == b)
        -:   12:	{
    #####:   13:		printf("%s Test Successful\n", testName);
        -:   14:	}
        -:   15:	
        -:   16:	else
        -:   17:	{
        2:   18:		printf("%s Test Failed\n", testName);
        -:   19:	}
        2:   20:}
        -:   21:
        1:   22:int main(int argc, char *argv[])
        -:   23:{
        1:   24:	int numPlayers = 2;
        1:   25:	int k[10] = {smithy, adventurer, council_room, feast, gardens, mine, remodel, village, salvager, great_hall};
        1:   26:	int seed = 10;
        -:   27:	struct gameState state;
        1:   28:	int choice1 = 0;
        1:   29:	int choice2 = 0;
        1:   30:	int choice3 = 0;
        1:   31:	int handpos = 0;
        1:   32:	int bonus = 0;
        -:   33:   
        -:   34:	//Print which test is being run
        1:   35:	printf("Card Test - Smithy\n");
        -:   36:	
        1:   37:	int initSuccess = initializeGame(numPlayers, k, seed, &state);
        1:   38:	if(initSuccess != 0)
        -:   39:	{
    #####:   40:	   printf("Game failed to initialize\n");
        -:   41:	}
        -:   42:    
        -:   43:	//State of Game Before Smithy is Played
        1:   44:	int inHand = numHandCards(&state);
        1:   45:	int deckSize = state.deckCount[whoseTurn(&state)];
        -:   46:	
        -:   47:	//Play Smithy
        1:   48:	cardEffect(smithy, choice1, choice2, choice3, &state, handpos, &bonus);
        -:   49:   
        -:   50:	//State of Game After Smithy is Played
        -:   51:	//Test Correct Hand Size - Should Increase by 2 (added 3, discarded Smithy)
        1:   52:	assertTrue(inHand + 2, numHandCards(&state), "Correct Hand Size -");
        -:   53:   
        -:   54:	//Test Correct Deck Size - Should Decrease by 3
        1:   55:	assertTrue(deckSize - 3, state.deckCount[whoseTurn(&state)], "Correct Deck Size -");
        -:   56:   
        1:   57:   return 0;   
        -:   58:}
        -:   59:
        -:   60:
